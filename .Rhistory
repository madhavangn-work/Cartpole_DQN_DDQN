knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(stats)
dqn_data <- read.csv("data/dqn.csv")
ddqn_data <- read.csv("data/ddqn.csv")
dqn_data <- t(dqn_data)
# Set the first row as column names
colnames(dqn_data) <- dqn_data[1, ]
# Remove the first row
dqn_data <- as.data.frame(dqn_data[-1, ])
dqn_data <- as.data.frame(sapply(dqn_data, as.numeric))
ddqn_data <- t(ddqn_data)
# Set the first row as column names
colnames(ddqn_data) <- ddqn_data[1, ]
# Remove the first row
ddqn_data <- as.data.frame(ddqn_data[-1, ])
ddqn_data <- as.data.frame(sapply(ddqn_data, as.numeric))
dqn_data$episode <- seq(1, nrow(dqn_data))
ddqn_data$episode <- seq(1, nrow(ddqn_data))
# Perform statistical tests
# 1. Paired t-test to compare q_max values between DQN and DDQN
t.test(dqn_data$q_max, ddqn_data$q_max)
# 3. Paired t-test to compare rewards between DQN and DDQN
t.test(dqn_data$rewards, ddqn_data$rewards)
# 4. Paired t-test to compare epsilon values between DQN and DDQN
t.test(dqn_data$epsilon, ddqn_data$epsilon)
# Plot the data
# 1. Plotting q_max over episodes for DQN and DDQN
plot_q_max <- ggplot() +
geom_line(data = dqn_data, aes(x = episode, y = q_max, color = "DQN")) +
geom_line(data = ddqn_data, aes(x = episode, y = q_max, color = "DDQN")) +
labs(x = "Episode", y = "Q_max", color = "Algorithm") +
scale_color_manual(values = c("DQN" = "blue", "DDQN" = "red"))
ggsave(file = "plots/q_val.png", plot = plot_q_max)
# 2. Plotting rewards over episodes for DQN and DDQN
plot_rewards <- ggplot() +
geom_line(data = dqn_data, aes(x = episode, y = rewards, color = "DQN")) +
geom_line(data = ddqn_data, aes(x = episode, y = rewards, color = "DDQN")) +
labs(x = "Episode", y = "Rewards", color = "Algorithm") +
scale_color_manual(values = c("DQN" = "blue", "DDQN" = "red"))
ggsave(file = "plots/rewards.png", plot = plot_rewards)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(stats)
dqn_data <- read.csv("data/dqn.csv")
ddqn_data <- read.csv("data/ddqn.csv")
dqn_data <- t(dqn_data)
# Set the first row as column names
colnames(dqn_data) <- dqn_data[1, ]
# Remove the first row
dqn_data <- as.data.frame(dqn_data[-1, ])
dqn_data <- as.data.frame(sapply(dqn_data, as.numeric))
ddqn_data <- t(ddqn_data)
# Set the first row as column names
colnames(ddqn_data) <- ddqn_data[1, ]
# Remove the first row
ddqn_data <- as.data.frame(ddqn_data[-1, ])
ddqn_data <- as.data.frame(sapply(ddqn_data, as.numeric))
dqn_data$episode <- seq(1, nrow(dqn_data))
ddqn_data$episode <- seq(1, nrow(ddqn_data))
# Perform statistical tests
# 1. t-test to compare q_max values between DQN and DDQN
t.test(dqn_data$q_max, ddqn_data$q_max)
# 3. t-test to compare rewards between DQN and DDQN
t.test(dqn_data$rewards, ddqn_data$rewards)
# 4. t-test to compare epsilon values between DQN and DDQN
t.test(dqn_data$epsilon, ddqn_data$epsilon)
# Plot the data
# 1. Plotting q_max over episodes for DQN and DDQN
plot_q_max <- ggplot() +
geom_line(data = dqn_data, aes(x = episode, y = q_max, color = "DQN")) +
geom_line(data = ddqn_data, aes(x = episode, y = q_max, color = "DDQN")) +
labs(x = "Episode", y = "Q_max", color = "Algorithm") +
scale_color_manual(values = c("DQN" = "blue", "DDQN" = "orange"))
ggsave(file = "plots/q_val.png", plot = plot_q_max)
# 2. Plotting rewards over episodes for DQN and DDQN
plot_rewards <- ggplot() +
geom_line(data = dqn_data, aes(x = episode, y = rewards, color = "DQN")) +
geom_line(data = ddqn_data, aes(x = episode, y = rewards, color = "DDQN")) +
labs(x = "Episode", y = "Rewards", color = "Algorithm") +
scale_color_manual(values = c("DQN" = "blue", "DDQN" = "orange"))
ggsave(file = "plots/rewards.png", plot = plot_rewards)
